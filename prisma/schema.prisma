generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Organization {
    id   Int    @id @default(autoincrement())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userOrganization UserOrganization[]
    group            Group[]
    client           Client[]
    product          Product[]
    order            Order[]
}

model User {
    id        Int     @id @default(autoincrement())
    name      String
    email     String  @unique
    password  String
    isDeleted Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userGroup        UserGroup[]
    userOrganization UserOrganization[]
}

model UserOrganization {
    id     Int @id @default(autoincrement())
    userId Int
    orgId  Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User         @relation(fields: [userId], references: [id])
    org  Organization @relation(fields: [orgId], references: [id])
}

model Group {
    id   Int    @id @default(autoincrement())
    name String

    orgId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userGroup       UserGroup[]
    organization    Organization      @relation(fields: [orgId], references: [id])
    permissionGroup PermissionGroup[]
}

model UserGroup {
    id Int @id @default(autoincrement())

    userId  Int @unique
    groupId Int @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user  User  @relation(fields: [userId], references: [id])
    group Group @relation(fields: [groupId], references: [id])
}

model Module {
    id          Int    @id @default(autoincrement())
    name        String
    description String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    permissionGroup PermissionGroup[]
}

model Permission {
    id        Int    @id @default(autoincrement())
    name      String
    guardName String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    permissionGroup PermissionGroup[]
}

model PermissionGroup {
    id Int @id @default(autoincrement())

    permissionId Int
    groupId      Int
    moduleId     Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    permission Permission @relation(fields: [permissionId], references: [id])
    group      Group      @relation(fields: [groupId], references: [id])
    module     Module     @relation(fields: [moduleId], references: [id])
}

// os models

model Client {
    id       Int     @id @default(autoincrement())
    name     String
    cpf_cnpj String
    rg       String?
    cnh      String
    status   Boolean @default(true)

    orgId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    organization  Organization    @relation(fields: [orgId], references: [id])
    clientVehicle ClientVehicle[]
    order         Order[]
}

model ClientVehicle {
    id       Int     @id @default(autoincrement())
    name     String
    plate    String
    document String?

    clientId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    client       Client         @relation(fields: [clientId], references: [id])
    orderVehicle OrderVehicle[]
}

model OrderStatus {
    id   Int    @id @default(autoincrement())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    order Order[]
}

model Product {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    price       Float
    type        Boolean

    orgId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    organization Organization   @relation(fields: [orgId], references: [id])
    orderProduct OrderProduct[]
}

model Order {
    id        Int @id @default(autoincrement())
    clientId Int
    statusId  Int
    orgId     Int
    isDeleted Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    client       Client         @relation(fields: [clientId], references: [id])
    status       OrderStatus    @relation(fields: [statusId], references: [id])
    organization Organization   @relation(fields: [orgId], references: [id])
    orderProduct OrderProduct[]
    orderVehicle OrderVehicle[]
}

model OrderProduct {
    id        Int     @id @default(autoincrement())
    orderId   Int
    productId Int
    show      Boolean @default(true)
    quantity  Int     @default(1)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    order   Order   @relation(fields: [orderId], references: [id])
    product Product @relation(fields: [productId], references: [id])
}

model OrderVehicle {
    id        Int @id @default(autoincrement())
    orderId   Int
    vehicleId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    vehicle ClientVehicle @relation(fields: [vehicleId], references: [id])
    order   Order         @relation(fields: [orderId], references: [id])
}
